/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 */

buildscript {

    ext {
        kotlin_version = '1.3.50'
        ktor_version = '1.2.3'
        logback_version = '1.2.3'
        junit_version = '5.3.1'
    }

    repositories {
        // Use jcenter for resolving your dependencies.
        // You can declare any Maven/Ivy/file repository here.
        jcenter()
    }

    dependencies { 
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: "kotlin"
apply plugin: "application"

// Define the main class for the application
mainClassName = "br.com.ktor.app.KtorDemoAppKt"

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}


configurations {
    ktlint
}

dependencies {
    // Use the Kotlin JDK 8 standard library
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

//    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.50"

    implementation "io.ktor:ktor-server-netty:$ktor_version"

    implementation "ch.qos.logback:logback-classic:$logback_version"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_version"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_version"

    ktlint "com.pinterest:ktlint:0.34.2"
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/pinterest/ktlint#usage for more
}

check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "-F", "src/**/*.kt"
}

test {
    useJUnitPlatform {
    }
}

jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
